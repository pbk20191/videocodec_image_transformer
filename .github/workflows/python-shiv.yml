name: Build and Package Pyz (3 OS Ã— 3 Python Versions)

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rosetta 2
      if: startsWith(matrix.os, 'macos')
      run: |
        if ! /usr/bin/pgrep oahd >/dev/null 2>&1; then
          sudo /usr/sbin/softwareupdate --install-rosetta --agree-to-license
        else
          echo "Rosetta is already installed"
        fi

    - name: Confirm x86_64 emulation works
      if: startsWith(matrix.os, 'macos')
      run: arch -x86_64 /usr/bin/env bash -c 'echo "Running in x86_64 mode"'

    - name: Setup Python 3.11
      id: py311
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
        cache: pip

    - name: Setup Python 3.12
      id: py312
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: pip

    - name: Setup Python 3.13
      id: py313
      uses: actions/setup-python@v5
      with:
        python-version: 3.13
        cache: pip

    - name: Setup Python 3.11
      id: py311_x64
      if: startsWith(matrix.os, 'macos')
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
        cache: pip
        architecture: x64

    - name: Setup Python 3.12
      id: py312_x64
      if: startsWith(matrix.os, 'macos')
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: pip
        architecture: x64

    - name: Setup Python 3.13
      id: py313_x64
      if: startsWith(matrix.os, 'macos')
      uses: actions/setup-python@v5
      with:
        python-version: 3.13
        cache: pip
        architecture: x64

    - name: Build with Python 3.11
      run: |
        ${{ steps.py311.outputs.python-path }} -m pip install -r requirements.txt
        ${{ steps.py311.outputs.python-path }} build.py cli build/cli-${{ runner.os }}-py3.11.pyz
        ${{ steps.py311.outputs.python-path }} build.py gui build/gui-${{ runner.os }}-py3.11.pyz

    - name: Build with Python 3.12
      run: |
        ${{ steps.py312.outputs.python-path }} -m pip install -r requirements.txt
        ${{ steps.py312.outputs.python-path }} build.py cli build/cli-${{ runner.os }}-py3.12.pyz
        ${{ steps.py312.outputs.python-path }} build.py gui build/gui-${{ runner.os }}-py3.12.pyz

    - name: Build with Python 3.13
      run: |
        ${{ steps.py313.outputs.python-path }} -m pip install -r requirements.txt
        ${{ steps.py313.outputs.python-path }} build.py cli build/cli-${{ runner.os }}-py3.13.pyz
        ${{ steps.py313.outputs.python-path }} build.py gui build/gui-${{ runner.os }}-py3.13.pyz

    - name: Build with Python 3.11
      if: startsWith(matrix.os, 'macos')
      run: |
        arch -x86_64 ${{ steps.py311_x64.outputs.python-path }} -m pip install -r requirements.txt
        arch -x86_64 ${{ steps.py311_x64.outputs.python-path }} build.py cli build/cli-${{ runner.os }}-py3.11_x64.pyz
        arch -x86_64 ${{ steps.py311_x64.outputs.python-path }} build.py gui build/gui-${{ runner.os }}-py3.11_x64.pyz

    - name: Build with Python 3.12
      if: startsWith(matrix.os, 'macos')
      run: |
        arch -x86_64 ${{ steps.py312_x64.outputs.python-path }} -m pip install -r requirements.txt
        arch -x86_64 ${{ steps.py312_x64.outputs.python-path }} build.py cli build/cli-${{ runner.os }}-py3.12_x64.pyz
        arch -x86_64 ${{ steps.py312_x64.outputs.python-path }} build.py gui build/gui-${{ runner.os }}-py3.12_x64.pyz

    - name: Build with Python 3.13
      if: startsWith(matrix.os, 'macos')
      run: |
        arch -x86_64 ${{ steps.py313_x64.outputs.python-path }} -m pip install -r requirements.txt
        arch -x86_64 ${{ steps.py313_x64.outputs.python-path }} build.py cli build/cli-${{ runner.os }}-py3.13_x64.pyz
        arch -x86_64 ${{ steps.py313_x64.outputs.python-path }} build.py gui build/gui-${{ runner.os }}-py3.13_x64.pyz

    - name: Upload all .pyz artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pyz-${{ runner.os }}
        path: build/*.pyz
