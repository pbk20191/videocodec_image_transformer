name: Build and Package Pyz

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.11", "3.12", "3.13"]


    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build CLI
      run: python build.py cli build/cli-${{ runner.os }}-py${{ matrix.python }}.pyz

    - name: Build GUI
      run: python build.py gui build/gui-${{ runner.os }}-py${{ matrix.python }}.pyz

    - name: Upload CLI Pyz
      uses: actions/upload-artifact@v4
      with:
        name: cli-${{ runner.os }}-py${{ matrix.python }}.pyz
        path: build/cli-${{ runner.os }}-py${{ matrix.python }}.pyz

    - name: Upload GUI Pyz
      uses: actions/upload-artifact@v4
      with:
        name: gui-${{ runner.os }}-py${{ matrix.python }}.pyz
        path: build/gui-${{ runner.os }}-py${{ matrix.python }}.pyz

    # üß† Ï∂îÍ∞Ä: Rosetta Î∞è x86_64 ÎπåÎìú (macOS Ï†ÑÏö©)
    - name: Install Rosetta (for macOS only)
      if: matrix.os == 'macos-latest'
      run: |
        softwareupdate --install-rosetta --agree-to-license

    - name: Download x86_64 Python ${{ matrix.python }} installer
      if: matrix.os == 'macos-latest'
      run: |
        curl -O https://www.python.org/ftp/python/${{ matrix.python }}/python-${{ matrix.python }}-macosx10.9.pkg

    - name: Install x86_64 Python ${{ matrix.python }}
      if: matrix.os == 'macos-latest'
      run: |
        sudo installer -pkg python-${{ matrix.python }}-macosx10.9.pkg -target /

    - name: Install dependencies for x86_64 Python
      if: matrix.os == 'macos-latest'
      run: |
        arch -x86_64 /usr/local/bin/python${{ matrix.python }} -m pip install --upgrade pip
        arch -x86_64 /usr/local/bin/python${{ matrix.python }} -m pip install -r requirements.txt

    - name: Build CLI (macOS x86_64)
      if: matrix.os == 'macos-latest'
      run: |
        arch -x86_64 /usr/local/bin/python${{ matrix.python }} build.py cli build/cli-macOS-x86_64-py${{ matrix.python }}.pyz

    - name: Build GUI (macOS x86_64)
      if: matrix.os == 'macos-latest'
      run: |
        arch -x86_64 /usr/local/bin/python${{ matrix.python }} build.py gui build/gui-macOS-x86_64-py${{ matrix.python }}.pyz

    - name: Upload CLI Pyz (macOS x86_64)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: cli-macOS-x86_64-py${{ matrix.python }}.pyz
        path: build/cli-macOS-x86_64-py${{ matrix.python }}.pyz

    - name: Upload GUI Pyz (macOS x86_64)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: gui-macOS-x86_64-py${{ matrix.python }}.pyz
        path: build/gui-macOS-x86_64-py${{ matrix.python }}.pyz